{"version":3,"sources":["api.tsx","components/ShowDogs.tsx","components/FavouriteDogs.tsx","components/App.tsx","index.tsx"],"names":["host","options","headers","getNewDog","a","fetch","then","res","json","status","message","catch","err","console","log","getDogs","method","list","addDog","url","body","JSON","stringify","dog","removeDog","ShowDogs","changeFavourite","favourites","useState","imgSrc","setImgSrc","dogsList","setDogsList","loading","setLoading","useEffect","length","fetchDog","slice","className","onClick","newDogsList","undefined","onLoad","src","alt","renderImage","indexOf","FavouriteDogs","map","App","setFavourites","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19898dea.chunk.js","sourcesContent":["const host = 'http://localhost:8080'\nconst options = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}\n\nexport const getNewDog = async () => {\n  return await fetch('https://dog.ceo/api/breeds/image/random')\n  .then(res => res.json())\n  .then(res => {\n    if (res.status === 'success') {\n      return res.message;\n    } else {\n      throw res\n    };\n  })\n  .catch(err => {\n    console.log(err);\n    throw err;\n  });\n};\n\nexport const getDogs = async () => {\n  return await fetch(host + '/getdogs', {...options, method: 'GET'})\n  .then(res => res.json())\n  .then(res => res.list)\n  .catch(err => {throw (err)}\n  );\n};\n\nexport const addDog = async (url :string) => {\n  const body = JSON.stringify({dog: url});\n  return await fetch(host + '/addDog', {...options, method: 'POST', body})\n  .then(res => res.json())\n  .catch(err => {\n    console.log('error adding dog');\n  });\n};\n\nexport const removeDog = async (url :string) => {\n  const body = JSON.stringify({dog: url});\n  return await fetch(host + '/removedog', {...options, method: 'PUT', body})\n  .then(res => res.json())\n  .catch(err => {\n    console.log('error removing dog');\n  });\n};\n\n","import React, { useEffect, useState } from 'react';\nimport {getNewDog} from '../api';\n\nimport './ShowDogs.css';\n\ninterface PropsType {\n  changeFavourite (url: string):void,\n  favourites: Array<string>;\n}\n\n\nconst ShowDogs = ({changeFavourite, favourites} : PropsType) => {\n\n  const [imgSrc, setImgSrc] = useState <string | undefined> ();\n  const [dogsList, setDogsList] = useState <Array<string | undefined>> ([]);\n  const [loading, setLoading] = useState <string | undefined> ();\n\n  useEffect(() => {\n    if (dogsList.length === 0) {\n      fetchDog();\n    };\n  }, []);\n\n  useEffect(() => {\n    setImgSrc(dogsList[dogsList.length -1])\n  }, [dogsList]);\n\n  const fetchDog = () => {\n    setLoading('loading');\n    getNewDog()\n    .then((res : string) => {\n      setDogsList([...dogsList, res].slice(-10))\n    })\n    .catch(() => {\n      console.log('error fetching dog');\n    });\n  };\n\n  const getNextDog = () => {\n    if (loading !== 'loading') {\n      fetchDog();\n    } else {\n      return;\n    };\n  };\n\n  const showPreviousDog = () => {\n    if (dogsList.length > 1) {\n      const newDogsList = dogsList.slice(0, dogsList.length -1);\n      setDogsList(newDogsList);\n    } else {\n      return;\n    };\n  };\n\n  const renderImage = () => {\n    switch (imgSrc) {\n      case 'error':\n        return;\n      case undefined:\n        return <div className='dog-image'>Loading...</div>\n      default:\n        return <img onLoad={() => setLoading(undefined)} className='dog-image' src={imgSrc} alt=\"Dog\" />;\n    };\n  };\n\n  const favouriteButton = () => {\n    return (\n      <button \n        onClick={() => (imgSrc && !loading) ? changeFavourite(imgSrc) : false }\n        className={`favourite-button ${loading ? 'unclickable' : ''}`}>\n        {`${(imgSrc && favourites.indexOf(imgSrc)) === -1 ? 'F' : 'Unf'}avourite`}\n      </button>\n    );\n  }\n\n  return (\n    <div className='ShowDogs centered'>\n      <div className='showdogs-container'>\n        <button \n          className={dogsList.length > 1 ? '' : 'unclickable'}\n          onClick={showPreviousDog}>\n          Previous\n        </button>\n        <div className='center'>\n          {renderImage()}\n          {favouriteButton()}\n         \n        </div>\n        <button \n          className={loading ? 'unclickable' : '' }\n          onClick={getNextDog}>\n            {loading ? 'loading...' : 'Next'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowDogs;","import React from 'react';\n\nimport './FavouriteDogs.css';\n\ninterface PropsType {\n  changeFavourite (url:string):void,\n  favourites: Array<string>;\n};\n\nconst FavouriteDogs = ({favourites, changeFavourite} :PropsType) => {\n\n  const showDogs = () => {\n    return favourites.map(dog => {\n      return (\n        <div className=\"favourite-dog\" key={dog}>\n          <img \n            src={dog} \n            className='favourite-dog-image'\n            alt=\"dog\" />\n          <button\n            onClick={() => changeFavourite(dog)}\n          >\n            Unfavourite\n          </button>\n        </div>\n      )\n    });\n  };\n\n  return (\n    <div className='FavouriteDogs'>\n      {showDogs()}\n    </div>\n  );\n};\n\nexport default FavouriteDogs;","import React, { useState, useEffect } from 'react';\nimport {getDogs, addDog, removeDog} from '../api';\nimport ShowDogs from './ShowDogs';\nimport FavouriteDogs from './FavouriteDogs';\n\nimport './App.css';\nimport '../styles/centered.css';\n\nconst App = () => {\n\n  const [favourites, setFavourites] = useState <Array<string>> ([]);\n\n  useEffect(() => {\n    getDogs()\n    .then(setFavourites)\n    .catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const changeFavourite = (url:string) => {\n    const favouritesIndex: number = favourites.indexOf(url);\n    if (favouritesIndex === -1) {\n      addDog(url);\n      setFavourites([...favourites, url]);\n    } else {\n      removeDog(url);\n      setFavourites(favourites.filter(dog => dog !==url));\n    };\n  };\n\n  return (\n    <div className='App centered'>\n      <ShowDogs \n        favourites={favourites} \n        changeFavourite={(url : string) => changeFavourite(url)}/>\n      <FavouriteDogs \n        favourites={favourites}\n        changeFavourite={(url:string) => changeFavourite(url)}/>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}