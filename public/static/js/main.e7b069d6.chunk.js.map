{"version":3,"sources":["api.tsx","components/ShowDogs.tsx","components/FavouriteDogs.tsx","components/App.tsx","index.tsx"],"names":["host","options","headers","getNewDog","a","fetch","then","res","json","status","message","catch","err","console","log","getDogs","method","list","map","dog","id","addDog","url","body","JSON","stringify","removeDog","ShowDogs","changeFavourite","favourites","useState","imgSrc","setImgSrc","dogsList","setDogsList","loading","setLoading","useEffect","length","getNextDog","splice","className","onClick","newDogsList","slice","src","alt","indexOf","FavouriteDogs","App","setFavourites","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b069d6.chunk.js","sourcesContent":["interface Dog {\n  id: string\n};\n\n\nconst host = 'http://localhost:8080'\nconst options = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}\n\nexport const getNewDog = async () => {\n  return await fetch('https://dog.ceo/api/breeds/image/random')\n  .then(res => res.json())\n  .then(res => {\n    if (res.status === 'success') {\n      return res.message;\n    } else {\n      throw res\n    };\n  })\n  .catch(err => console.log(err));\n};\n\nexport const getDogs = async () => {\n  return await fetch(host + '/getdogs', {...options, method: 'GET'})\n  .then(res => res.json())\n  .then(res => res.list.map((dog : Dog) => dog.id))\n  .catch(err => console.log(err));\n};\n\nexport const addDog = async (url :string) => {\n  const body = JSON.stringify({dog: url});\n  return await fetch(host + '/addDog', {...options, method: 'POST', body})\n  .then(res => res.json())\n  .then(res => res.list.map((dog : Dog) => dog.id))\n  .catch(err => {\n    console.log('error adding dog');\n  });\n};\n\nexport const removeDog = async (url :string) => {\n  const body = JSON.stringify({dog: url});\n  return await fetch(host + '/removedog', {...options, method: 'PUT', body})\n  .then(res => res.json())\n  .then(res => res.list.map((dog : Dog) => dog.id))\n  .catch(err => {\n    console.log('error removing dog');\n  });\n};\n\n","import React, { useEffect, useState } from 'react';\nimport {getNewDog} from '../api';\n\ninterface PropsType {\n  changeFavourite (url: string):void,\n  favourites: Array<string>;\n}\n\nconst ShowDogs = ({changeFavourite, favourites} : PropsType) => {\n\n  const [imgSrc, setImgSrc] = useState <string | undefined> ();\n  const [dogsList, setDogsList] = useState <Array<string | undefined>> ([]);\n  const [loading, setLoading] = useState <string | undefined> ();\n\n  useEffect(() => {\n    if (dogsList.length === 0) {\n      getNextDog();\n    };\n  }, []);\n\n  useEffect(() => {\n    setImgSrc(dogsList[dogsList.length -1])\n  }, [dogsList]);\n\n  const getNextDog = () => {\n    if (loading !== 'loading') {\n      setLoading('loading');\n      getNewDog()\n      .then(res => {\n        setLoading('');\n        setDogsList([...dogsList, res].splice(-10));\n      })\n      .catch(() => {\n        console.log('error fetching dog');\n      });\n    } else {\n      return;\n    };\n  };\n\n  const showPreviousDog = () => {\n    if (dogsList.length > 1) {\n      const newDogsList = dogsList.slice(0, dogsList.length -1);\n      setDogsList(newDogsList);\n    } else {\n      return;\n    };\n  };\n\n  const showImage = () => {\n    switch (loading) {\n      case 'loading':\n        return (\n          <div className='dog-image'>\n            <div className=\"loading-spinner\">\n            </div>\n            <p className=\"loading-text\">Loading</p>\n          </div>\n        )\n      default:\n        return <img className='dog-image' src={imgSrc} alt=\"Dog\" />;\n\n    };\n  };\n\n  const favouriteButton = () => {\n    return (\n      <button \n        onClick={() => (imgSrc && !loading) ? changeFavourite(imgSrc) : false }\n        className={`${loading ? 'unclickable' : ''}`}>\n          {loading \n            ? 'Loading...'\n            : `${(imgSrc && favourites.indexOf(imgSrc)) === -1 ? 'F' : 'Unf'}avourite`\n          }\n      </button>\n    );\n  };\n\n  return (\n    <div className='show-dogs'>\n      <div className='showdogs-container'>\n        <button \n          className={dogsList.length > 1 ? '' : 'unclickable'}\n          onClick={showPreviousDog}>\n          Previous\n        </button>\n        <div className='center'>\n          {showImage()}\n          {favouriteButton()}\n        </div>\n        <button \n          className={loading ? 'unclickable' : '' }\n          onClick={getNextDog}>\n            {loading ? 'loading...' : 'Next'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ShowDogs;","import React from 'react';\n\ninterface PropsType {\n  changeFavourite (url:string):void;\n  favourites: Array<string>;\n};\n\nconst FavouriteDogs = ({favourites, changeFavourite} :PropsType) => {\n\n  const showDogs = () => {\n    return favourites.map(dog => {\n      return (\n        <div className=\"favourite-dog\" key={dog}>\n          <img \n            src={dog} \n            className='favourite-dog-image'\n            alt=\"dog\" />\n          <button onClick={() => changeFavourite(dog)}>\n            Unfavourite\n          </button>\n        </div>\n      )\n    });\n  };\n\n  return (\n    <div className='favourite-dogs'>\n      {favourites.length > 0 ? \n      <h1>Your Favourite Dogs</h1>\n      : null\n      }\n      <div className='favourite-dogs-list'>\n        {showDogs()}\n      </div>\n    </div>\n  );\n};\n\nexport default FavouriteDogs;","import React, { useState, useEffect } from 'react';\nimport {getDogs, addDog, removeDog} from '../api';\nimport ShowDogs from './ShowDogs';\nimport FavouriteDogs from './FavouriteDogs';\n\nimport '../styles/bestdogs.css';\n\ninterface Dog {\n  id: string\n};\n\nconst App = () => {\n\n  const [favourites, setFavourites] = useState <string[]> ([]);\n\n  useEffect(() => {\n    getDogs()\n    .then(setFavourites)\n    .catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const changeFavourite = (url : string) => {\n    const favouritesIndex: number = favourites.indexOf(url);\n    if (favouritesIndex === -1) {\n      addDog(url)\n      .then(res => {\n        setFavourites(res);\n      });\n    } else {\n      removeDog(url)\n      .then(res => {\n        setFavourites(res);\n      });\n    };\n  };\n\n  return (\n    <div className='app'>\n      <ShowDogs \n        favourites={favourites} \n        changeFavourite={(url) => changeFavourite(url)}/>\n      <FavouriteDogs \n        favourites={favourites}\n        changeFavourite={(url) => changeFavourite(url)}/>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}